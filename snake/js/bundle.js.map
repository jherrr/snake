{"version":3,"sources":["webpack/bootstrap d4461676c689e3400d09","./js/main.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACzEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d4461676c689e3400d09\n **/","var View = require(\"./snake-view.js\");\n\n  console.log(\"js loading!\");\n  var view = new View();\n\n  var Snake = function(direction, segments) {\n    this.direction = direction;\n    this.segments = segments;\n  };\n\n  Snake.prototype.move = function() {\n    this.segments.forEach( function(segment) {\n      segment.plus(this.direction);\n    });\n  };\n\n  Snake.prototype.turn = function(direction) {\n    this.direction = direction;\n  };\n\n  var Coord = function(row, col) {\n    this.row = row;\n    this.col = col;\n  };\n\n  Coord.prototype.plus = function(direction) {\n    switch (direction) {\n      case \"N\":\n        this.row -= 1;\n        break;\n      case \"E\":\n        this.col += 1;\n        break;\n      case \"S\":\n        this.row += 1;\n        break;\n      case \"W\":\n        this.col -= 1;\n        break;\n    }\n  };\n\n  Coord.prototype.equals = function(coordinate) {\n    if (this.row === coordinate.row) {\n      if (this.col === coordinate.col) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Coord.prototype.isOpposite = function (direction, coordinate) {\n          var copy = new Coord(this.row, this.col);\n          copy.plus(direction);\n          return copy.equals(coordinate);\n  };\n\n  var Board = function() {\n    var segments = [];\n    var coordinates = [[0,0],[0,1],[0,2]];\n\n    for(var x = 0; x < coordinates.length; x++) {\n      var row = coordinates[x][0];\n      var col = coordinates[x][1];\n      segments.push(new Coord(row, col));\n    }\n\n    var snake = new Snake(\"N\", segments);\n\n    this.snake = snake;\n    this.apples = [];\n  };\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require(\"./main.js\");\n\nvar View = function() {\n  this.board = new Board();\n  $(\"snake\").on(\"keydown\", function(e) {\n    e.handleKeyEvent(e);\n    // debugger\n  });\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}